buildscript {
    repositories {
        jcenter()
    }
    dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE")
        classpath ('io.spring.gradle:dependency-management-plugin:0.5.4.RELEASE')
    }
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

dependencyManagement {
	imports {
		mavenBom 'io.spring.platform:platform-bom:2.0.2.RELEASE'
	}
}

//***** TASK to run the project locally via GRADLE *****
// Get configuration from application-local.yml
task bootRunLocal <<{
	bootRun {
		 systemProperty "spring.profiles.active", "local"
	}
}
bootRunLocal.finalizedBy bootRun
 
// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

configurations.all {
	// remove logback from all dependencies
	exclude module: 'logback-classic'
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
	compile 'org.springframework.boot:spring-boot-starter-batch'
	compile 'org.springframework.boot:spring-boot-starter-data-mongodb'
	compile('org.springframework.boot:spring-boot-starter-log4j2')

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
	testCompile 'org.springframework.boot:spring-boot-starter-test'
	testCompile 'org.assertj:assertj-core:3.4.1'
}
